# Derived from https://github.com/obi1kenobi/cargo-semver-checks/blob/main/.github/workflows/ci.yml

name: CI

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * *" # run once per day at 7:00 am

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  PACKAGE_NAME: entromatica

jobs:
  lint-and-test:
    name: Run tests, lint and rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features --all-targets -- -D warnings --allow deprecated

      - name: Format and create commit if necessary
        uses: mbrobbel/rustfmt-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: test
        run: cargo test

  should-publish:
    name: Check if version changed and if it is semver compliant
    runs-on: ubuntu-latest
    outputs:
      is_new_version: ${{ steps.check.outputs.is_new_version }}
      publish-tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - id: check
        run: |
          chmod +x ./scripts/is_version_already_uploaded.sh
          chmod +x ./scripts/get_current_version.sh
          set +e
          ./scripts/is_version_already_uploaded.sh $PACKAGE_NAME
          export EXIT_CODE="$?"
          set -e
          if [[ "$EXIT_CODE" == "7" ]]; then
            echo '::set-output name=is_new_version::no'
          elif [[ "$EXIT_CODE" == "0" ]]; then
            echo '::set-output name=is_new_version::yes'
          else
            # Unexpected outcome, indicates a bug.
            exit "$EXIT_CODE"
          fi
      - name: Determine the tag name
        id: tag
        run: |
          export TAG_NAME="v$(./scripts/get_current_version.sh $PACKAGE_NAME)"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Check semver
        if: steps.check.outputs.is_new_version == 'yes'
        run: |
          cargo install cargo-semver-checks
          cargo semver-checks check-release

  release:
    name: Publish to GitHub and crates.io
    runs-on: ubuntu-latest
    needs:
      - lint-and-test
      - should-publish
    if: needs.should-publish.outputs.is_new_version == 'yes' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Publish
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Tag the version
        run: |
          git tag "${{ needs.should-publish.outputs.publish-tag }}"
          git push origin "${{ needs.should-publish.outputs.publish-tag }}"
      - uses: taiki-e/create-gh-release-action@v1
        name: Create github release
        with:
          branch: main
          ref: refs/tags/${{ needs.should-publish.outputs.publish-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
